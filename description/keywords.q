// INFO ====================================================
// Purpose: Script used by other utilities or dictionaries to
//==========================================================
/ Descriptions of different keywords

// Author: Spencer
//==========================================================
.kdb.desc.keywords.abs:"absolute value. A multithreaded primitive."
.kdb.desc.keywords.acos:"This is a unary funcation that returns the arcos (or inverse cosine) of x, with the result in radians.";
.kdb.desc.keywords.aj:"Generally this is used to get the prevailing quote one tablwe as of the time of the trade (other table). aj[`sym`time;trade;quote]";
.kdb.desc.keywords.aj0:"Same as the as of join except that the resulting time value is from the quote table instead of the boundary time from the trade table. aj0 returns the actual time from the second table.";
.kdb.desc.keywords.all:"This is an aggregate monadic function. The function returns boolean atomb 1b if all values in its argument are non-zero and 0b otherwise. The function all can be applied to any datatype except symbol by converting the type to boolean and then performing the operation.";
.kdb.desc.keywords.and:"These are respectively the restrictions of min, mand and not to bool arguments.";
.kdb.desc.keywords.any:"This is an aggregate monadic function. This function returns 1b if any value in its argument is non-zero and returns 0b if all values in its argument are 0";
.kdb.desc.keywords.asc:"This function sorts a list and applies `s# attribute. On homogenous lists, asc sorts the list in ascending order and applies the `s# attribute. On a mixed list, asc sorts values within datatype groups. On a dictionary, asc sorts by the values. On a table, asc sorts by the first unkeyed column and applies the sorted attribute to that column";
.kdb.desc.keywords.asin:"This is a unary function that returns the arcsine (or inverse sine) of x in radians. The arguments must be within -1<=x<=1, otherwise the null value 0n is returned."
.kdb.desc.keywords.atan:"This is a unary function that returns the arc tan (or inverse  tangent) of x, with the result in radians. Valid arguments must be approximately of the order +10 to the 9th power or -10 to the ninth power. If this is not the case then the function will not evaluate."
.kdb.desc.keywords.attr:"The attr function gives the attributes of data,which describe certain properties; `s denotes sorted ascending, eg, `s#2 3 4. `u denotes unique, `u#2 3 4, `p and `g are used to refer to lists with reptition with `p standing for parted and `g for grouped. Attribute flags are descriptive, not prescriptive; amends and appends preserve flags if the attribute is preserved. In other words, a sorted list remains sorted until an element is inserted in such a manner that disrupts the sort. Furthermore, applying an attribute to a list will result in fail if the list does not fulfill the attributes requirements."
.kdb.desc.keywords.avg:"This function returns the arithmetic mean of a list of numeric values. The averages of lists of conformant lists can be return as well."
.kdb.desc.keywords.avgs:"The function avgs computes the running average of a list with numerica values."
.kdb.desc.keywords.bin:"The function bin performs a binary search and gives the index of the last element in x which <=y. The result is -1 for y less than the first element of x. Although bin does not require an ascending list, the return value is undefined for all non-ascending lists."
.kdb.desc.keywords.binr:"The function binr gives the index of the first element in x which is >=y. Like bin the items of the left argument should be ascending to return meaning results."
.kdb.desc.keywords.ceiling:"The ceiling function is the complement to the floor function. given a float or real the ceiling function always rounds up to the nearest integer. It is equivalent to 1 + floor x."
.kdb.desc.keywords.cols:"This keyword returns the columns of a table as a list."
.kdb.desc.keywords.cor:"This function gives the correlation between two numeric lists of the same length. If each list only has one member, the float null 0n is returned. The function output is between 1 and -1, with 1 denoting perfect correlation and -1 denoting perfect anti-correlation."
.kdb.desc.keywords.cos:"This unary function returns the cosine of x, where x is in radians. Note that cos x repeats iteself every 2*pi and consequently valid values of x are of the order + 10 to the ninth power or -10 to the ninth power."
.kdb.desc.keywords.count:"This aggregate function counts the elements in a list,table, or dictionary and returns a single long value."
.kdb.desc.keywords.cov:"This function gives the covariance between two numeric lists of the same length. Attempting to find the covariance between two single numbers produces the null float value 0f"
.kdb.desc.keywords.cross:"This function gives the cartesian product of two arguments"
.kdb.desc.keywords.cut:"This function allows a table or list to be cut at a certain point. Putting in negative numbers or a single zero results in a domain error. Putting in a number larger then the number of atoms results in the argument being returned as a single element list."
.kdb.desc.keywords.delete:"This command enables rows or columns from a table to be deleted. The syntax is similar to that of a query."
.kdb.desc.keywords.deltas:"The deltas function is another primitive uniform function, which produces the differences of neighbouring items in the argument. The ith item of the result of deltas v is v[i]-v[i-1] for i greater than 0. Note that the first item of the result is identical to the firsm item of the argument."
.kdb.desc.keywords.desc:"This monadic function sorts a list from largest to smallest. Duplicates are allowed making this a uniform function."
.kdb.desc.keywords.dev:"This function gives the mathematical deviation for a list of numeric values; it is therefore an aggregate function. The numeric list need to have at least 2 values or else the null 0f is returned."
.kdb.desc.keywords.differ:"This uniform function checks each member of a list to see if it differs from the preceding element. It returns a list of bool values with 1b indicating that the current value and the preceding one do differ whilst a 0b indicates the opposite. The first atom of a list returns 1b by default."
.kdb.desc.keywords.distinct:"This monadic function returns the distinct elements of a list."
.kdb.desc.keywords.div:"The function div is a dyadic function which performs integer division on two values. The function preserves the type of the first argument, except char, bytes, and shorts are converted to ints."
.kdb.desc.keywords.divide:"Divid is a dyadic arithmetic function. Note that divide is denote by eprcentage sign. Numeric datatypes can be mixed in arithmetic expressions and required conversions from one to another automatic. the arguments of percentage sign are converted to float before the operation is performed."
.kdb.desc.keywords.do:"A dyadic function, which accepts an integer and a function. the do function runs the inputfunction the inputer number of times."
.kdb.desc.keywords.dsave:"A dyadic function, the dscave function saves global tables to disk as a splayed enumerated and indexted tables. Provides similar functionalit to .Q.dpft."
.kdb.desc.keywords.each:"The each keyword (adverb or iterator) takes a function on its left and creates a new function that applies to each item of its argument."
.kdb.desc.keywords.eachboth:"The each-both ' adverb modifies a dyadic function by applyings its behavior item-wise to corresponding list elements. Note that there cannot be any whitespace between ' and the verb or function that it modifies."
.kdb.desc.keywords.ej:"The equijoin joins tables on a list of columns specified as the first argument."
.kdb.desc.keywords.enlist:"A monadic primitive function, which enables one-item lists to be created. In the example above, a three item list is turned into a one item list with the itembeing a three item list."
.kdb.desc.keywords.equal:"This is a dyadic relational function. This function produces boolean values, where 1b means that the each atom in a list is equal to the related atom. The relational functions q use a multiplicative tolerance when applied to floats. this makes arithmetic work better. Does not take into account type."
.kdb.desc.keywords.eval:"The eval function is used to evaluate parse trees."
.kdb.desc.keywords.except:"This function deletes items from a list."
.kdb.desc.keywords.exec:"Written similarly to select statements, exec statements return the same results as select except in the forms of lists or dictionaries depending on the number of columns selected."
.kdb.desc.keywords.exit:"This keyword terminates a process with a given exit code, e.g. exit 0."
.kdb.desc.keywords.exp:"This function returns e^x (e to the power of x) where 'e' is the natural number and is approximately equal to 2.718282."
.kdb.desc.keywords.fby:"This function can take the place of common by phrases, thereby simplifying them - useful in where clauses."
.kdb.desc.keywords.fill:"There are three functions for processing null values. The dyadic function named fill replaces values in the right argument with the atomic left argument. Integer left arguments are promoted when the right argument is float or real. We could also choose to fill in with the non null-values."
.kdb.desc.keywords.fills:"This function fills in nulls with the previous not null value."
.kdb.desc.keywords.first:"The command returns the first atom of a list, a dictionary representation of the first row of a table or the value of the first element in a dictionary."
.kdb.desc.keywords.fkeys:""
.kdb.desc.keywords.flip:""
.kdb.desc.keywords.floor:""
.kdb.desc.keywords.get:""
.kdb.desc.keywords.getenv:""
.kdb.desc.keywords.group:""
.kdb.desc.keywords.gtime:""
.kdb.desc.keywords.hclose:""
.kdb.desc.keywords.hcount:""
.kdb.desc.keywords.hdel:""
.kdb.desc.keywords.hopen:""
.kdb.desc.keywords.hsym:""
.kdb.desc.keywords.iasc:""
.kdb.desc.keywords.idesc:""
.kdb.desc.keywords.if:""
.kdb.desc.keywords.ij:""
.kdb.desc.keywords.in:""
.kdb.desc.keywords.insert:"This keyword is used to append new data to a table and returns the index of the new row. If insert is used on a key table and the key already axists an insert error will be returned.";
.kdb.desc.keywords.inter:""
.kdb.desc.keywords.inv:""
.kdb.desc.keywords.key:""
.kdb.desc.keywords.keys:""
.kdb.desc.keywords.last:""
.kdb.desc.keywords.like:""
.kdb.desc.keywords.lj:""
.kdb.desc.keywords.ljf:""
.kdb.desc.keywords.load:""
.kdb.desc.keywords.log:""
.kdb.desc.keywords.lower:""
.kdb.desc.keywords.lsq:""
.kdb.desc.keywords.ltime:""
.kdb.desc.keywords.ltrime:""
.kdb.desc.keywords.match:""
.kdb.desc.keywords.mavg:""
.kdb.desc.keywords.max:""
.kdb.desc.keywords.maxs:""
.kdb.desc.keywords.mcount:""
.kdb.desc.keywords.md5:""
.kdb.desc.keywords.mdev:""
.kdb.desc.keywords.med:""
.kdb.desc.keywords.meta:""
.kdb.desc.keywords.min:""
.kdb.desc.keywords.mins:""
.kdb.desc.keywords.minus:""
.kdb.desc.keywords.mmax:""
.kdb.desc.keywords.mmin:""
.kdb.desc.keywords.mmu:""
.kdb.desc.keywords.mod:""
.kdb.desc.keywords.msum:""
.kdb.desc.keywords.multiplication:""
.kdb.desc.keywords.neg:""
.kdb.desc.keywords.next:""
.kdb.desc.keywords.not:""
.kdb.desc.keywords.null:""
.kdb.desc.keywords.over:""
.kdb.desc.keywords.parse:""
.kdb.desc.keywords.peach:""
.kdb.desc.keywords.pj:""
.kdb.desc.keywords.plus:""
.kdb.desc.keywords.prd:""
.kdb.desc.keywords.prds:""
.kdb.desc.keywords.prior:""
.kdb.desc.keywords.prev:""
.kdb.desc.keywords.rand:""
.kdb.desc.keywords.rank:""
.kdb.desc.keywords.ratios:""
.kdb.desc.keywords.raze:"return the items of x, collapsing one level of nesting"
.kdb.desc.keywords.read0:""
.kdb.desc.keywords.read1:""
.kdb.desc.keywords.reciprocal:""
.kdb.desc.keywords.reval:""
.kdb.desc.keywords.reverse:""
.kdb.desc.keywords.rload:""
.kdb.desc.keywords.rotate:""
.kdb.desc.keywords.rsave:""
.kdb.desc.keywords.rtrim:""
.kdb.desc.keywords.save:""
.kdb.desc.keywords.scan:""
.kdb.desc.keywords.scov:""
.kdb.desc.keywords.sdev:""
.kdb.desc.keywords.select:""
.kdb.desc.keywords.set:""
.kdb.desc.keywords.sevenv:""
.kdb.desc.keywords.show:""
.kdb.desc.keywords.signum:""
.kdb.desc.keywords.sin:""
.kdb.desc.keywords.sqrt:""
.kdb.desc.keywords.ss:""
.kdb.desc.keywords.ssr:""
.kdb.desc.keywords.string:""
.kdb.desc.keywords.sublist:""
.kdb.desc.keywords.sum:""
.kdb.desc.keywords.sums:""
.kdb.desc.keywords.sv:""
.kdb.desc.keywords.svar:""
.kdb.desc.keywords.system:""
.kdb.desc.keywords.tables:""
.kdb.desc.keywords.tan:""
.kdb.desc.keywords.til:""
.kdb.desc.keywords.trim:""
.kdb.desc.keywords.type:""
.kdb.desc.keywords.uj:""
.kdb.desc.keywords.ungroup:""
.kdb.desc.keywords.union:""
.kdb.desc.keywords.update:""
.kdb.desc.keywords.upper:""
.kdb.desc.keywords.update:"This function can be used to update certain information in a table. If the table name is passed by value, a table is returned with the updated results. If the table name is passed by reference the table name as a symbol is returned and the changes are persisted in the table.";
.kdb.desc.keywords.upper:
.kdb.desc.keywords.upsert:"The verb upsert inserts or updates new records to a table. If the table is keyed and a record matches on a keyed column, then the matching row is updated. Otherwise the record is inserted at the end of the table."
.kdb.desc.keywords.value:""
.kdb.desc.keywords.var:""
.kdb.desc.keywords.view:""
.kdb.desc.keywords.views:""
.kdb.desc.keywords.vs:""
.kdb.desc.keywords.wavg:""
.kdb.desc.keywords.where:""
.kdb.desc.keywords.within:""
.kdb.desc.keywords.wj:""
.kdb.desc.keywords.wj1:""
.kdb.desc.keywords.ww:""
.kdb.desc.keywords.wsum:""
.kdb.desc.keywords.xasc:""
.kdb.desc.keywords.xbar:""
.kdb.desc.keywords.xcol:""
.kdb.desc.keywords.xcols:""
.kdb.desc.keywords.xdesc:""
.kdb.desc.keywords.xexp:""
.kdb.desc.keywords.xgroup:""
.kdb.desc.keywords.xkey:""
.kdb.desc.keywords.xlog:""
.kdb.desc.keywords.xprev:""
.kdb.desc.keywords.xrank:""